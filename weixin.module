<?php

/*
 * This file is licensed under GPLv2+.
*/

/**
 * @file
 * Provides features interacting with weixin public open platform.
 */

define("WEIXIN_SEED_LENGTH",8);

// Define weixin class
// Constructor: $wee = new Wechat($token, $_GET, $wxid);
class Wechat
{
	public $wxid = NULL;
	public $username = NULL;
	public $content = NULL;
	
	public function __construct() {
		$args = func_get_args();
		if($this->checkSignature($args[0], $args[1])) {
			$this->wxid=$args[2];
		}
	}
	private function checkSignature($token, $get) {
		$signature = $get['signature'];
		$timestamp = $get["timestamp"];
		$nonce = $get["nonce"];
		$tmpArr = array($token, $timestamp, $nonce);
		natsort($tmpArr);
		$tmpStr = implode( $tmpArr );
		$tmpStr = sha1( $tmpStr );
		if( $tmpStr == $signature ) return TRUE;
		else return FALSE;
	}
	
	public function pharsePost($post) {
		$postObj = simplexml_load_string($post, 'SimpleXMLElement', LIBXML_NOCDATA);
		if($postObj!= FALSE && $this->wxid == $postObj->ToUserName) {
			$this->username = $postObj->FromUserName;
			$this->content = trim($postObj->Content);
		}
		unset($postObj);
	}
	
	public function response($keyword, $stared=FALSE) {
		$textTpl = "<xml><ToUserName><![CDATA[%s]]></ToUserName><FromUserName><![CDATA[%s]]></FromUserName><CreateTime>%s</CreateTime><MsgType><![CDATA[%s]]></MsgType><Content><![CDATA[%s]]></Content><FuncFlag>%s</FuncFlag></xml>";
		$msgType = "text";
		$time=time();
		$resultStr = sprintf($textTpl, $this->username, $this->wxid, $time, $msgType, $keyword, $stared?1:0);
		return $resultStr;
	}
}

/**
 * Implementation of hook_help().
 */
function weixin_help($path, $arg) {
	$output = '';
	switch ($path) {
		case 'admin/config/services/weixin':
			$output = '<p>'.t('In this page, you could set various settings regarding weixin public platform.').'</p>';
			break;
		case 'user/%/weixin':
			$output = '<p>'.t('In this page, you could bind your account with a weixin id, or detach your account from existing weixin id.').'</p>';
			break;
		default:
			return;
	}
	return $output;
}

/**
 * Implementation of hook_permission
 */
function weixin_permission() {
	return array(
		'allow weixin binding' => array(
			'title' => t('Allow binding with weixin account'),
		),
	);
}

/**
 * Implementation of hook_menu().
 */
function weixin_menu() {
	$items['admin/config/services/weixin'] = array(
		'title' => 'weixin rules',
		'description' => 'weixin configuration and customized rules for response.',
		'access arguments' => array('access administration pages'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('weixin_admin_form'),
	);
	$items['weixin'] = array(
		'title' => 'weixin',
		'description' => 'weixin interface',
		'page callback' => 'weixin_response',
		'access callback' => 'weixin_response_access',
		'type' => MENU_CALLBACK,
	);
	$items['user/%user/weixin'] = array(
		'title' => 'Weixin binding',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('weixin_user_binding',1),
		'type' => MENU_LOCAL_TASK,
		'access callback' => 'weixin_user_access',
		'access arguments' => array(1),
	);
	return $items;
}

function weixin_user_access($user) {
	if($user->uid==$GLOBALS['user']->uid) return user_access('allow weixin binding');
	else return user_access('allow weixin binding', $user) && user_access('administer users');
}

function weixin_admin_form($form, $form_state) {
	$form=array(
		'#submit' => array('weixin_admin_form_submit'),
	);
	$form['weixinname'] = array(
		'#type' => 'machine_name',
		'#title' => t('Site global weixin account name'),
		'#description' => t('Weixin account name to display in binding page.'),
		'#default_value' => variable_get('weixinname', ''),
		'#required' => TRUE,
		'#machine_name' => array(
			'exists' => 'weixin_name_fake_exists',
		),
	);
	$form['weixinid'] = array(
		'#type' => 'machine_name',
		'#title' => t('Site global weixin id'),
		'#description' => t('Messages sent to other weixinid will be ignored automatically.'),
		'#default_value' => variable_get('weixinid', ''),
		'#required' => TRUE,
		'#machine_name' => array(
			'exists' => 'weixin_name_fake_exists',
		),
	);
	$form['weixintoken'] = array(
		'#type' => 'textfield',
		'#title' => t('Token'),
		'#description' => t('The token set in weixin public platform.'),
		'#default_value' => variable_get('weixintoken', ''),
		'#required' => TRUE,
	);
	return system_settings_form($form);
}

function weixin_name_fake_exists($value) {
	return FALSE;
}

function weixin_admin_form_submit($form, $form_state) {
	variable_set('weixinname',$form_state['values']['weixinname']);
	variable_set('weixinid',$form_state['values']['weixinid']);
	variable_set('weixintoken',$form_state['values']['weixintoken']);
}

function weixin_response() {
	$wxid=variable_get('weixinid', '');
	$token=variable_get('weixintoken', '');
	$weechat = new Wechat($token, $_GET, $wxid);
	// If connecting to public platform, then echo $_GET['echostr'] and exit.
	if($_SERVER['REQUEST_METHOD']=='GET') {
		watchdog('weixin',
			'Site connected with weixin public platform via @wxid (token @token).',
			array('@wxid' => $wxid, '@token' => $token),
			WATCHDOG_INFO
		);
		echo $_GET['echostr'];
		exit;
	}
	
	// Fill up relative structure
	$weechat->pharsePost(file_get_contents("php://input"));
	if(!$weechat->username) exit;
	
	$user=user_load(0);
	$r=db_select('users_weixin','u')->condition('u.wx_openid',$weechat->username)->condition('u.status',1)->fields('u',array('uid'))->execute()->fetchObject();
	if(isset($r->uid))
		$user=user_load($r->uid);
	$result=implode(module_invoke_all('weixin', $weechat, $user),'\n');
	drupal_add_http_header('Content-Type', 'application/xml; charset=utf-8');
	if(empty($result)) $result=(($user->uid)?t('Hello @username.',array('@username'=>$user->name)):'').'/:--b'.t('Sorry, but I cannot understand what you are taking about.');
	echo $weechat->response($result);
	
	watchdog('weixin',
		'Recieved @content and returned @response',
		array('@content'=>($weechat->content), '@response'=>$result),
		WATCHDOG_DEBUG
	); 
	exit; 
}

function weixin_response_access() {
	$wxid=variable_get('weixinid', '');
	$token=variable_get('weixintoken', '');
	$weechat = new Wechat($token, $_GET, $wxid);
	// If wxid is not set, the the request is invalid.
	if(!$weechat->wxid) return FALSE:
	else return TRUE;
}

function weixin_user_binding($form, $form_state, $user) {
	$r=db_select('users_weixin','u')->fields('u')->condition('u.uid',$user->uid)->condition('u.status',1)->countQuery()->execute()->fetchField();
	$form=array();
	$form['user']=array(
		'#type' => 'hidden',
		'#value' => $user->uid,
	);
	// Means it has been bound with
	if($r) { // this user has already bound with weixin account
		$form['description']=array(
			'#type' => 'markup',
			'#markup' => '<p>'.'<img src="/'.drupal_get_path('module', 'weixin') . '/weixin_100.png" align="left" width="100" heigh="125" style="padding: 10px"/>'.t('It seems that you have already bound your account with weixin id.').t('If you want to detach your account, please click following button.').'</p>',
		);
		$form['submit'] = array(
			'#type' => 'submit',
			'#value' => t('Unbound'),
			'#submit' => array('weixin_user_binding_unbound'),
		);
	} else {
		$result=db_select('weixin_validation','w')->condition('uid',$user->uid)->fields('w',array('expiration_time'))->execute();
		if($result->rowCount()==0 || $result->fetchField() < time() ) {
			$seed='';
			$validationcode='';
			$allowable_characters = 'ABCDEFHKLMNPQRSTUVWXYZ';
			$len = strlen($allowable_characters) - 1;
			for($i=0;$i<WEIXIN_SEED_LENGTH;$i++) {
				$seed.=$allowable_characters[mt_rand(0, $len)];
				$validationcode.=$allowable_characters[mt_rand(0, $len)];
			}
			db_delete('weixin_validation')->condition('uid',$user->uid)->execute();
			db_insert('weixin_validation')->fields(array(
				'uid' => $user->uid,
				'seed' => $seed,
				'validation_code' => $validationcode,
				'expiration_time'=> time()+300,
			))->execute();
		}
		$r=db_select('weixin_validation','w')->condition('uid',$user->uid)->fields('w')->execute()->fetchObject();
		$seed=$r->seed;
		$validationcode=$r->validation_code;
		$form['description']=array(
			'#type' => 'markup',
			'#markup' => '<p><img src="/'.drupal_get_path('module', 'weixin') . '/weixin_100.png" align="right" width="100" heigh="125" style="padding: 10px"/>'.t('You haven\'t bound your account with weixin id.').t('If you want to bind your account, please do as following.').'</p>',
		);
		$form['step1']=array(
			'#type' => 'item',
			'#title' => '1. '.t('Follow <code>@code</code> in your weixin client',array('@code'=>variable_get('weixinname', ''))),
			'#description' => '<div><img src="/'.drupal_get_path('module', 'weixin').'/qrcode.jpg" valign="top"/>'.t('Scan this qrcode or search <code>@code</code> in your weixin client.', array('@code'=>variable_get('weixinname', ''))).'</div>',
		);
		$form['step2']=array(
			'#type' => 'textfield',
			'#size' => 10,
			'#disabled' => TRUE,
			'#value' => $seed,
			'#title' => '2. '.t('Send following code to <code>@code</code>' ,array('@code'=>variable_get('weixinname', ''))),
			'#description' => t('The code will expire in five minutes. If time passed, please <a href="@url">refresh the page</a>.', array('@url'=>'/user/'.$user->uid.'/weixin')),
			'#attributes'=>array('style'=>'font-size: 40px'),
		);
		$form['step3']=array(
			'#type' => 'textfield',
			'#required' => TRUE,
			'#size' => 10,
			'#title' => '3. '.t('Enter the validation code here'),
			'#description' => t('Input the validation code you received in your weixin client.'),
			'#attributes'=>array('style'=>'font-size: 40px'),
		);
		$form['submit'] = array(
			'#type' => 'submit',
			'#value' => t('Bind my account'),
		);
	}
	
	return $form;
}

function weixin_user_binding_validate($form, &$form_state) {
	if(isset($form_state['values']['step3'])) {
		$result=db_select('users_weixin','u')->condition('status',0)->condition('uid',$form_state['values']['user'])->fields('u')->execute();
		if($result->rowCount()==0) {
			form_set_error('step3', t('It seems that you have not send the message to our weixina public account.')); return;
		}
		$query=db_select('weixin_validation','w')->condition('seed',$form_state['values']['step2'])->fields('w');
		$result=$query->execute();
		switch($result->rowCount()) {
			case 0:
				$form_state['rebuild']=true; break;
			case 1:
				$r=$result->fetchObject();
				if($r->validation_code != $form_state['values']['step3']) {
					form_set_error('step3', t('The validation code you have entered is wrong.')); break;
				}
		}
	}
}

function weixin_user_binding_submit($form, &$form_state) {
	$user=user_load($form_state['values']['user']);
	db_update('users_weixin')->condition('uid',$form_state['values']['user'])->condition('status',0)->fields(array(
		'status'=>1,
	))->execute();
	db_delete('weixin_validation')->condition('uid',$user->uid)->execute();
	$r=db_select('users_weixin','u')->condition('uid',$user->uid)->fields('u',array('wx_openid'))->execute()->fetchField();
	watchdog('weixin',
		'@username bound his account with weixin id @wxid.',
		array('@username'=>$user->name, '@wxid'=>$r),
		WATCHDOG_INFO
	);
	drupal_set_message(t('Weixin acccount bound successfully.'));
}

function weixin_user_binding_unbound($form, $form_state) {
	$user=user_load($form_state['values']['user']);
	db_delete('users_weixin')->condition('uid',$user->uid)->execute();
	watchdog('weixin',
		'@user detached his weixin account.',
		array('@user'=>$user->name),
		WATCHDOG_INFO
	); 
	drupal_set_message(t('Weixin acccount detached.'));
}

function weixin_weixin($weechat, $user) {
	$content=trim($weechat->content);
	// If welcome message should be displayed:
	if(preg_match('/^Hello2BizUser$/', $content)) {
		$t=t('Welcome to @sitename. You are talking with robot now.',array('@sitename'=>variable_get('site_name')));
	}
	// If sent given number of ucase chars, then validate it.
	if(preg_match('/^[A-Z]{'.WEIXIN_SEED_LENGTH.'}$/',$content)) {
		$r=db_select('weixin_validation','w')->fields('w')->condition('seed',$content)->execute()->fetchObject();
		if($r) {
			// Lets check if the users have been registered with another account at first
			$c=db_select('users_weixin','u')->condition('wx_openid',$weechat->username)->fields('u')->countQuery()->execute()->fetchField();
			if($c>0)
				$t=t('Sorry, you have already registered with another account at @sitename.', array('@sitename'=>variable_get('site_name')));
			else if($r->expiration_time < time())
				$t=t('The code you have entered has expired. Please fresh the page.');
			else {
				$t=t('Your validation code is @code, please input it at website.', array('@code' => $r->validation_code));
				db_delete('users_weixin')->condition('uid',$r->uid)->execute();
				db_insert('users_weixin')->fields(array(
					'uid' => $r->uid,
					'wx_openid' => $weechat->username,
					'status' => 0,
				))->execute();
			}
		}
	}
	if(isset($t)) return $t;
}

function weixin_cron() {
	db_delete('weixin_validation')->condition('expiration_time',time(),'<')->execute();
}

/**
 *  * Implementation of hook_uninstall().
 *   */
function weixin_uninstall() {
	$settings=array(
		'weixinname', 'weixinid', 'weixintoken'
	);
	foreach($settings as $s) {
		variable_del($s);
	}
}

